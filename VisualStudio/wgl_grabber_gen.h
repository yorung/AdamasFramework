// This source code was automatically generated by WGLGrabber
#include <windows.h>
#include <gl/gl.h>
#include "glheaders/glcorearb.h"
#include "glheaders/wglext.h"
extern void (APIENTRY*glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
extern void (APIENTRY*glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void (APIENTRY*glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void (APIENTRY*glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (APIENTRY*glActiveTexture)(GLenum texture);
extern void (APIENTRY*glSampleCoverage)(GLfloat value, GLboolean invert);
extern void (APIENTRY*glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glGetCompressedTexImage)(GLenum target, GLint level, void *img);
extern void (APIENTRY*glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern void (APIENTRY*glMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
extern void (APIENTRY*glMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
extern void (APIENTRY*glPointParameterf)(GLenum pname, GLfloat param);
extern void (APIENTRY*glPointParameterfv)(GLenum pname, const GLfloat *params);
extern void (APIENTRY*glPointParameteri)(GLenum pname, GLint param);
extern void (APIENTRY*glPointParameteriv)(GLenum pname, const GLint *params);
extern void (APIENTRY*glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void (APIENTRY*glBlendEquation)(GLenum mode);
extern void (APIENTRY*glGenQueries)(GLsizei n, GLuint *ids);
extern void (APIENTRY*glDeleteQueries)(GLsizei n, const GLuint *ids);
extern GLboolean (APIENTRY*glIsQuery)(GLuint id);
extern void (APIENTRY*glBeginQuery)(GLenum target, GLuint id);
extern void (APIENTRY*glEndQuery)(GLenum target);
extern void (APIENTRY*glGetQueryiv)(GLenum target, GLenum pname, GLint *params);
extern void (APIENTRY*glGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
extern void (APIENTRY*glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
extern void (APIENTRY*glBindBuffer)(GLenum target, GLuint buffer);
extern void (APIENTRY*glDeleteBuffers)(GLsizei n, const GLuint *buffers);
extern void (APIENTRY*glGenBuffers)(GLsizei n, GLuint *buffers);
extern GLboolean (APIENTRY*glIsBuffer)(GLuint buffer);
extern void (APIENTRY*glBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
extern void (APIENTRY*glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
extern void (APIENTRY*glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
extern void *(APIENTRY*glMapBuffer)(GLenum target, GLenum access);
extern GLboolean (APIENTRY*glUnmapBuffer)(GLenum target);
extern void (APIENTRY*glGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
extern void (APIENTRY*glGetBufferPointerv)(GLenum target, GLenum pname, void **params);
extern void (APIENTRY*glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
extern void (APIENTRY*glDrawBuffers)(GLsizei n, const GLenum *bufs);
extern void (APIENTRY*glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern void (APIENTRY*glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
extern void (APIENTRY*glStencilMaskSeparate)(GLenum face, GLuint mask);
extern void (APIENTRY*glAttachShader)(GLuint program, GLuint shader);
extern void (APIENTRY*glBindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
extern void (APIENTRY*glCompileShader)(GLuint shader);
extern GLuint (APIENTRY*glCreateProgram)(void);
extern GLuint (APIENTRY*glCreateShader)(GLenum type);
extern void (APIENTRY*glDeleteProgram)(GLuint program);
extern void (APIENTRY*glDeleteShader)(GLuint shader);
extern void (APIENTRY*glDetachShader)(GLuint program, GLuint shader);
extern void (APIENTRY*glDisableVertexAttribArray)(GLuint index);
extern void (APIENTRY*glEnableVertexAttribArray)(GLuint index);
extern void (APIENTRY*glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern void (APIENTRY*glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern void (APIENTRY*glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
extern GLint (APIENTRY*glGetAttribLocation)(GLuint program, const GLchar *name);
extern void (APIENTRY*glGetProgramiv)(GLuint program, GLenum pname, GLint *params);
extern void (APIENTRY*glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void (APIENTRY*glGetShaderiv)(GLuint shader, GLenum pname, GLint *params);
extern void (APIENTRY*glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void (APIENTRY*glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
extern GLint (APIENTRY*glGetUniformLocation)(GLuint program, const GLchar *name);
extern void (APIENTRY*glGetUniformfv)(GLuint program, GLint location, GLfloat *params);
extern void (APIENTRY*glGetUniformiv)(GLuint program, GLint location, GLint *params);
extern void (APIENTRY*glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
extern void (APIENTRY*glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
extern void (APIENTRY*glGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
extern void (APIENTRY*glGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
extern GLboolean (APIENTRY*glIsProgram)(GLuint program);
extern GLboolean (APIENTRY*glIsShader)(GLuint shader);
extern void (APIENTRY*glLinkProgram)(GLuint program);
extern void (APIENTRY*glShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
extern void (APIENTRY*glUseProgram)(GLuint program);
extern void (APIENTRY*glUniform1f)(GLint location, GLfloat v0);
extern void (APIENTRY*glUniform2f)(GLint location, GLfloat v0, GLfloat v1);
extern void (APIENTRY*glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void (APIENTRY*glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void (APIENTRY*glUniform1i)(GLint location, GLint v0);
extern void (APIENTRY*glUniform2i)(GLint location, GLint v0, GLint v1);
extern void (APIENTRY*glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
extern void (APIENTRY*glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void (APIENTRY*glUniform1fv)(GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glUniform2fv)(GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glUniform3fv)(GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glUniform4fv)(GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glUniform1iv)(GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glUniform2iv)(GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glUniform3iv)(GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glUniform4iv)(GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glValidateProgram)(GLuint program);
extern void (APIENTRY*glVertexAttrib1d)(GLuint index, GLdouble x);
extern void (APIENTRY*glVertexAttrib1dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttrib1f)(GLuint index, GLfloat x);
extern void (APIENTRY*glVertexAttrib1fv)(GLuint index, const GLfloat *v);
extern void (APIENTRY*glVertexAttrib1s)(GLuint index, GLshort x);
extern void (APIENTRY*glVertexAttrib1sv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
extern void (APIENTRY*glVertexAttrib2dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
extern void (APIENTRY*glVertexAttrib2fv)(GLuint index, const GLfloat *v);
extern void (APIENTRY*glVertexAttrib2s)(GLuint index, GLshort x, GLshort y);
extern void (APIENTRY*glVertexAttrib2sv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void (APIENTRY*glVertexAttrib3dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void (APIENTRY*glVertexAttrib3fv)(GLuint index, const GLfloat *v);
extern void (APIENTRY*glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
extern void (APIENTRY*glVertexAttrib3sv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttrib4Nbv)(GLuint index, const GLbyte *v);
extern void (APIENTRY*glVertexAttrib4Niv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttrib4Nsv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void (APIENTRY*glVertexAttrib4Nubv)(GLuint index, const GLubyte *v);
extern void (APIENTRY*glVertexAttrib4Nuiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttrib4Nusv)(GLuint index, const GLushort *v);
extern void (APIENTRY*glVertexAttrib4bv)(GLuint index, const GLbyte *v);
extern void (APIENTRY*glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void (APIENTRY*glVertexAttrib4dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void (APIENTRY*glVertexAttrib4fv)(GLuint index, const GLfloat *v);
extern void (APIENTRY*glVertexAttrib4iv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void (APIENTRY*glVertexAttrib4sv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttrib4ubv)(GLuint index, const GLubyte *v);
extern void (APIENTRY*glVertexAttrib4uiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttrib4usv)(GLuint index, const GLushort *v);
extern void (APIENTRY*glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
extern void (APIENTRY*glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern void (APIENTRY*glGetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
extern void (APIENTRY*glGetIntegeri_v)(GLenum target, GLuint index, GLint *data);
extern void (APIENTRY*glEnablei)(GLenum target, GLuint index);
extern void (APIENTRY*glDisablei)(GLenum target, GLuint index);
extern GLboolean (APIENTRY*glIsEnabledi)(GLenum target, GLuint index);
extern void (APIENTRY*glBeginTransformFeedback)(GLenum primitiveMode);
extern void (APIENTRY*glEndTransformFeedback)(void);
extern void (APIENTRY*glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void (APIENTRY*glBindBufferBase)(GLenum target, GLuint index, GLuint buffer);
extern void (APIENTRY*glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
extern void (APIENTRY*glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
extern void (APIENTRY*glClampColor)(GLenum target, GLenum clamp);
extern void (APIENTRY*glBeginConditionalRender)(GLuint id, GLenum mode);
extern void (APIENTRY*glEndConditionalRender)(void);
extern void (APIENTRY*glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void (APIENTRY*glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
extern void (APIENTRY*glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
extern void (APIENTRY*glVertexAttribI1i)(GLuint index, GLint x);
extern void (APIENTRY*glVertexAttribI2i)(GLuint index, GLint x, GLint y);
extern void (APIENTRY*glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
extern void (APIENTRY*glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void (APIENTRY*glVertexAttribI1ui)(GLuint index, GLuint x);
extern void (APIENTRY*glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
extern void (APIENTRY*glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
extern void (APIENTRY*glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void (APIENTRY*glVertexAttribI1iv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttribI2iv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttribI3iv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttribI4iv)(GLuint index, const GLint *v);
extern void (APIENTRY*glVertexAttribI1uiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttribI2uiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttribI3uiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttribI4uiv)(GLuint index, const GLuint *v);
extern void (APIENTRY*glVertexAttribI4bv)(GLuint index, const GLbyte *v);
extern void (APIENTRY*glVertexAttribI4sv)(GLuint index, const GLshort *v);
extern void (APIENTRY*glVertexAttribI4ubv)(GLuint index, const GLubyte *v);
extern void (APIENTRY*glVertexAttribI4usv)(GLuint index, const GLushort *v);
extern void (APIENTRY*glGetUniformuiv)(GLuint program, GLint location, GLuint *params);
extern void (APIENTRY*glBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
extern GLint (APIENTRY*glGetFragDataLocation)(GLuint program, const GLchar *name);
extern void (APIENTRY*glUniform1ui)(GLint location, GLuint v0);
extern void (APIENTRY*glUniform2ui)(GLint location, GLuint v0, GLuint v1);
extern void (APIENTRY*glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void (APIENTRY*glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void (APIENTRY*glUniform1uiv)(GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glUniform2uiv)(GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glUniform3uiv)(GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glUniform4uiv)(GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glTexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
extern void (APIENTRY*glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
extern void (APIENTRY*glGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
extern void (APIENTRY*glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
extern void (APIENTRY*glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
extern void (APIENTRY*glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
extern void (APIENTRY*glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
extern void (APIENTRY*glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern const GLubyte *(APIENTRY*glGetStringi)(GLenum name, GLuint index);
extern GLboolean (APIENTRY*glIsRenderbuffer)(GLuint renderbuffer);
extern void (APIENTRY*glBindRenderbuffer)(GLenum target, GLuint renderbuffer);
extern void (APIENTRY*glDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
extern void (APIENTRY*glGenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
extern void (APIENTRY*glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
extern GLboolean (APIENTRY*glIsFramebuffer)(GLuint framebuffer);
extern void (APIENTRY*glBindFramebuffer)(GLenum target, GLuint framebuffer);
extern void (APIENTRY*glDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
extern void (APIENTRY*glGenFramebuffers)(GLsizei n, GLuint *framebuffers);
extern GLenum (APIENTRY*glCheckFramebufferStatus)(GLenum target);
extern void (APIENTRY*glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void (APIENTRY*glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void (APIENTRY*glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void (APIENTRY*glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void (APIENTRY*glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
extern void (APIENTRY*glGenerateMipmap)(GLenum target);
extern void (APIENTRY*glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void (APIENTRY*glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void *(APIENTRY*glMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern void (APIENTRY*glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
extern void (APIENTRY*glBindVertexArray)(GLuint array);
extern void (APIENTRY*glDeleteVertexArrays)(GLsizei n, const GLuint *arrays);
extern void (APIENTRY*glGenVertexArrays)(GLsizei n, GLuint *arrays);
extern GLboolean (APIENTRY*glIsVertexArray)(GLuint array);
extern void (APIENTRY*glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
extern void (APIENTRY*glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
extern void (APIENTRY*glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
extern void (APIENTRY*glPrimitiveRestartIndex)(GLuint index);
extern void (APIENTRY*glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void (APIENTRY*glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
extern void (APIENTRY*glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
extern void (APIENTRY*glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
extern GLuint (APIENTRY*glGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
extern void (APIENTRY*glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
extern void (APIENTRY*glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
extern void (APIENTRY*glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
extern void (APIENTRY*glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void (APIENTRY*glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void (APIENTRY*glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
extern void (APIENTRY*glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
extern void (APIENTRY*glProvokingVertex)(GLenum mode);
extern GLsync (APIENTRY*glFenceSync)(GLenum condition, GLbitfield flags);
extern GLboolean (APIENTRY*glIsSync)(GLsync sync);
extern void (APIENTRY*glDeleteSync)(GLsync sync);
extern GLenum (APIENTRY*glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void (APIENTRY*glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void (APIENTRY*glGetInteger64v)(GLenum pname, GLint64 *data);
extern void (APIENTRY*glGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
extern void (APIENTRY*glGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
extern void (APIENTRY*glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
extern void (APIENTRY*glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void (APIENTRY*glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void (APIENTRY*glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void (APIENTRY*glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
extern void (APIENTRY*glSampleMaski)(GLuint maskNumber, GLbitfield mask);
extern void (APIENTRY*glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
extern GLint (APIENTRY*glGetFragDataIndex)(GLuint program, const GLchar *name);
extern void (APIENTRY*glGenSamplers)(GLsizei count, GLuint *samplers);
extern void (APIENTRY*glDeleteSamplers)(GLsizei count, const GLuint *samplers);
extern GLboolean (APIENTRY*glIsSampler)(GLuint sampler);
extern void (APIENTRY*glBindSampler)(GLuint unit, GLuint sampler);
extern void (APIENTRY*glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
extern void (APIENTRY*glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
extern void (APIENTRY*glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
extern void (APIENTRY*glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
extern void (APIENTRY*glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
extern void (APIENTRY*glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
extern void (APIENTRY*glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
extern void (APIENTRY*glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
extern void (APIENTRY*glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
extern void (APIENTRY*glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
extern void (APIENTRY*glQueryCounter)(GLuint id, GLenum target);
extern void (APIENTRY*glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
extern void (APIENTRY*glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
extern void (APIENTRY*glVertexAttribDivisor)(GLuint index, GLuint divisor);
extern void (APIENTRY*glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void (APIENTRY*glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void (APIENTRY*glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void (APIENTRY*glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void (APIENTRY*glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void (APIENTRY*glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void (APIENTRY*glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void (APIENTRY*glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void (APIENTRY*glMinSampleShading)(GLfloat value);
extern void (APIENTRY*glBlendEquationi)(GLuint buf, GLenum mode);
extern void (APIENTRY*glBlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void (APIENTRY*glBlendFunci)(GLuint buf, GLenum src, GLenum dst);
extern void (APIENTRY*glBlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void (APIENTRY*glDrawArraysIndirect)(GLenum mode, const void *indirect);
extern void (APIENTRY*glDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
extern void (APIENTRY*glUniform1d)(GLint location, GLdouble x);
extern void (APIENTRY*glUniform2d)(GLint location, GLdouble x, GLdouble y);
extern void (APIENTRY*glUniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
extern void (APIENTRY*glUniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void (APIENTRY*glUniform1dv)(GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glUniform2dv)(GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glUniform3dv)(GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glUniform4dv)(GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glUniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glGetUniformdv)(GLuint program, GLint location, GLdouble *params);
extern GLint (APIENTRY*glGetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
extern GLuint (APIENTRY*glGetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
extern void (APIENTRY*glGetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
extern void (APIENTRY*glGetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
extern void (APIENTRY*glGetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
extern void (APIENTRY*glUniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
extern void (APIENTRY*glGetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
extern void (APIENTRY*glGetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
extern void (APIENTRY*glPatchParameteri)(GLenum pname, GLint value);
extern void (APIENTRY*glPatchParameterfv)(GLenum pname, const GLfloat *values);
extern void (APIENTRY*glBindTransformFeedback)(GLenum target, GLuint id);
extern void (APIENTRY*glDeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
extern void (APIENTRY*glGenTransformFeedbacks)(GLsizei n, GLuint *ids);
extern GLboolean (APIENTRY*glIsTransformFeedback)(GLuint id);
extern void (APIENTRY*glPauseTransformFeedback)(void);
extern void (APIENTRY*glResumeTransformFeedback)(void);
extern void (APIENTRY*glDrawTransformFeedback)(GLenum mode, GLuint id);
extern void (APIENTRY*glDrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
extern void (APIENTRY*glBeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
extern void (APIENTRY*glEndQueryIndexed)(GLenum target, GLuint index);
extern void (APIENTRY*glGetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
extern void (APIENTRY*glReleaseShaderCompiler)(void);
extern void (APIENTRY*glShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
extern void (APIENTRY*glGetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
extern void (APIENTRY*glDepthRangef)(GLfloat n, GLfloat f);
extern void (APIENTRY*glClearDepthf)(GLfloat d);
extern void (APIENTRY*glGetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
extern void (APIENTRY*glProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
extern void (APIENTRY*glProgramParameteri)(GLuint program, GLenum pname, GLint value);
extern void (APIENTRY*glUseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
extern void (APIENTRY*glActiveShaderProgram)(GLuint pipeline, GLuint program);
extern GLuint (APIENTRY*glCreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
extern void (APIENTRY*glBindProgramPipeline)(GLuint pipeline);
extern void (APIENTRY*glDeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
extern void (APIENTRY*glGenProgramPipelines)(GLsizei n, GLuint *pipelines);
extern GLboolean (APIENTRY*glIsProgramPipeline)(GLuint pipeline);
extern void (APIENTRY*glGetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
extern void (APIENTRY*glProgramUniform1i)(GLuint program, GLint location, GLint v0);
extern void (APIENTRY*glProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
extern void (APIENTRY*glProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
extern void (APIENTRY*glProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
extern void (APIENTRY*glProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
extern void (APIENTRY*glProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern void (APIENTRY*glProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
extern void (APIENTRY*glProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
extern void (APIENTRY*glProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern void (APIENTRY*glProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void (APIENTRY*glProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
extern void (APIENTRY*glProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void (APIENTRY*glProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void (APIENTRY*glProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void (APIENTRY*glProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void (APIENTRY*glProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void (APIENTRY*glProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
extern void (APIENTRY*glProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void (APIENTRY*glProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void (APIENTRY*glProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void (APIENTRY*glProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void (APIENTRY*glProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void (APIENTRY*glValidateProgramPipeline)(GLuint pipeline);
extern void (APIENTRY*glGetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void (APIENTRY*glVertexAttribL1d)(GLuint index, GLdouble x);
extern void (APIENTRY*glVertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
extern void (APIENTRY*glVertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void (APIENTRY*glVertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void (APIENTRY*glVertexAttribL1dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttribL2dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttribL3dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttribL4dv)(GLuint index, const GLdouble *v);
extern void (APIENTRY*glVertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void (APIENTRY*glGetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
extern void (APIENTRY*glViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
extern void (APIENTRY*glViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern void (APIENTRY*glViewportIndexedfv)(GLuint index, const GLfloat *v);
extern void (APIENTRY*glScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
extern void (APIENTRY*glScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern void (APIENTRY*glScissorIndexedv)(GLuint index, const GLint *v);
extern void (APIENTRY*glDepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
extern void (APIENTRY*glDepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
extern void (APIENTRY*glGetFloati_v)(GLenum target, GLuint index, GLfloat *data);
extern void (APIENTRY*glGetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
extern void (APIENTRY*glDrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern void (APIENTRY*glDrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
extern void (APIENTRY*glDrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern void (APIENTRY*glGetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
extern void (APIENTRY*glGetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
extern void (APIENTRY*glBindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
extern void (APIENTRY*glMemoryBarrier)(GLbitfield barriers);
extern void (APIENTRY*glTexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern void (APIENTRY*glTexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glTexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void (APIENTRY*glDrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
extern void (APIENTRY*glDrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
extern void (APIENTRY*glClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
extern void (APIENTRY*glClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
extern void (APIENTRY*glDispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
extern void (APIENTRY*glDispatchComputeIndirect)(GLintptr indirect);
extern void (APIENTRY*glCopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern void (APIENTRY*glFramebufferParameteri)(GLenum target, GLenum pname, GLint param);
extern void (APIENTRY*glGetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
extern void (APIENTRY*glGetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
extern void (APIENTRY*glInvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
extern void (APIENTRY*glInvalidateTexImage)(GLuint texture, GLint level);
extern void (APIENTRY*glInvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void (APIENTRY*glInvalidateBufferData)(GLuint buffer);
extern void (APIENTRY*glInvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
extern void (APIENTRY*glInvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (APIENTRY*glMultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void (APIENTRY*glMultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void (APIENTRY*glGetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
extern GLuint (APIENTRY*glGetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
extern void (APIENTRY*glGetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
extern void (APIENTRY*glGetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
extern GLint (APIENTRY*glGetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
extern GLint (APIENTRY*glGetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
extern void (APIENTRY*glShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
extern void (APIENTRY*glTexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void (APIENTRY*glTexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void (APIENTRY*glTexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void (APIENTRY*glTextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern void (APIENTRY*glBindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void (APIENTRY*glVertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void (APIENTRY*glVertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (APIENTRY*glVertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (APIENTRY*glVertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
extern void (APIENTRY*glVertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
extern void (APIENTRY*glDebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
extern void (APIENTRY*glDebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
extern void (APIENTRY*glDebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
extern GLuint (APIENTRY*glGetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
extern void (APIENTRY*glPushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
extern void (APIENTRY*glPopDebugGroup)(void);
extern void (APIENTRY*glObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
extern void (APIENTRY*glGetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void (APIENTRY*glObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
extern void (APIENTRY*glGetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void (APIENTRY*glBufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
extern void (APIENTRY*glClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
extern void (APIENTRY*glClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
extern void (APIENTRY*glBindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
extern void (APIENTRY*glBindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
extern void (APIENTRY*glBindTextures)(GLuint first, GLsizei count, const GLuint *textures);
extern void (APIENTRY*glBindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
extern void (APIENTRY*glBindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
extern void (APIENTRY*glBindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
extern void (APIENTRY*glClipControl)(GLenum origin, GLenum depth);
extern void (APIENTRY*glCreateTransformFeedbacks)(GLsizei n, GLuint *ids);
extern void (APIENTRY*glTransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
extern void (APIENTRY*glTransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void (APIENTRY*glGetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
extern void (APIENTRY*glGetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
extern void (APIENTRY*glGetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
extern void (APIENTRY*glCreateBuffers)(GLsizei n, GLuint *buffers);
extern void (APIENTRY*glNamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
extern void (APIENTRY*glNamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
extern void (APIENTRY*glNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
extern void (APIENTRY*glCopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void (APIENTRY*glClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
extern void (APIENTRY*glClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
extern void *(APIENTRY*glMapNamedBuffer)(GLuint buffer, GLenum access);
extern void *(APIENTRY*glMapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern GLboolean (APIENTRY*glUnmapNamedBuffer)(GLuint buffer);
extern void (APIENTRY*glFlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void (APIENTRY*glGetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
extern void (APIENTRY*glGetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
extern void (APIENTRY*glGetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
extern void (APIENTRY*glGetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
extern void (APIENTRY*glCreateFramebuffers)(GLsizei n, GLuint *framebuffers);
extern void (APIENTRY*glNamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void (APIENTRY*glNamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
extern void (APIENTRY*glNamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern void (APIENTRY*glNamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void (APIENTRY*glNamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
extern void (APIENTRY*glNamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
extern void (APIENTRY*glNamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
extern void (APIENTRY*glInvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
extern void (APIENTRY*glInvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (APIENTRY*glClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
extern void (APIENTRY*glClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
extern void (APIENTRY*glClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
extern void (APIENTRY*glClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);
extern void (APIENTRY*glBlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern GLenum (APIENTRY*glCheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
extern void (APIENTRY*glGetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
extern void (APIENTRY*glGetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
extern void (APIENTRY*glCreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
extern void (APIENTRY*glNamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glNamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glGetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
extern void (APIENTRY*glCreateTextures)(GLenum target, GLsizei n, GLuint *textures);
extern void (APIENTRY*glTextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
extern void (APIENTRY*glTextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void (APIENTRY*glTextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
extern void (APIENTRY*glTextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void (APIENTRY*glTextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void (APIENTRY*glTextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void (APIENTRY*glTextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void (APIENTRY*glTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void (APIENTRY*glTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void (APIENTRY*glTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void (APIENTRY*glCompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void (APIENTRY*glCopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void (APIENTRY*glCopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (APIENTRY*glCopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (APIENTRY*glTextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
extern void (APIENTRY*glTextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
extern void (APIENTRY*glTextureParameteri)(GLuint texture, GLenum pname, GLint param);
extern void (APIENTRY*glTextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
extern void (APIENTRY*glTextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
extern void (APIENTRY*glTextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
extern void (APIENTRY*glGenerateTextureMipmap)(GLuint texture);
extern void (APIENTRY*glBindTextureUnit)(GLuint unit, GLuint texture);
extern void (APIENTRY*glGetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void (APIENTRY*glGetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
extern void (APIENTRY*glGetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
extern void (APIENTRY*glGetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
extern void (APIENTRY*glGetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
extern void (APIENTRY*glGetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
extern void (APIENTRY*glGetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
extern void (APIENTRY*glGetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
extern void (APIENTRY*glCreateVertexArrays)(GLsizei n, GLuint *arrays);
extern void (APIENTRY*glDisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
extern void (APIENTRY*glEnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
extern void (APIENTRY*glVertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
extern void (APIENTRY*glVertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void (APIENTRY*glVertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
extern void (APIENTRY*glVertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern void (APIENTRY*glVertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void (APIENTRY*glVertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (APIENTRY*glVertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (APIENTRY*glVertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern void (APIENTRY*glGetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
extern void (APIENTRY*glGetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
extern void (APIENTRY*glGetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
extern void (APIENTRY*glCreateSamplers)(GLsizei n, GLuint *samplers);
extern void (APIENTRY*glCreateProgramPipelines)(GLsizei n, GLuint *pipelines);
extern void (APIENTRY*glCreateQueries)(GLenum target, GLsizei n, GLuint *ids);
extern void (APIENTRY*glGetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (APIENTRY*glGetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (APIENTRY*glGetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (APIENTRY*glGetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (APIENTRY*glMemoryBarrierByRegion)(GLbitfield barriers);
extern void (APIENTRY*glGetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void (APIENTRY*glGetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
extern GLenum (APIENTRY*glGetGraphicsResetStatus)(void);
extern void (APIENTRY*glGetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
extern void (APIENTRY*glGetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void (APIENTRY*glGetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
extern void (APIENTRY*glGetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void (APIENTRY*glGetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void (APIENTRY*glGetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
extern void (APIENTRY*glReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void (APIENTRY*glTextureBarrier)(void);
extern GLuint64 (APIENTRY*glGetTextureHandleARB)(GLuint texture);
extern GLuint64 (APIENTRY*glGetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
extern void (APIENTRY*glMakeTextureHandleResidentARB)(GLuint64 handle);
extern void (APIENTRY*glMakeTextureHandleNonResidentARB)(GLuint64 handle);
extern GLuint64 (APIENTRY*glGetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
extern void (APIENTRY*glMakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
extern void (APIENTRY*glMakeImageHandleNonResidentARB)(GLuint64 handle);
extern void (APIENTRY*glUniformHandleui64ARB)(GLint location, GLuint64 value);
extern void (APIENTRY*glUniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
extern void (APIENTRY*glProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
extern void (APIENTRY*glProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
extern GLboolean (APIENTRY*glIsTextureHandleResidentARB)(GLuint64 handle);
extern GLboolean (APIENTRY*glIsImageHandleResidentARB)(GLuint64 handle);
extern void (APIENTRY*glVertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
extern void (APIENTRY*glVertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
extern void (APIENTRY*glGetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
extern GLsync (APIENTRY*glCreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
extern void (APIENTRY*glDispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
extern void (APIENTRY*glDebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
extern void (APIENTRY*glDebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
extern void (APIENTRY*glDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
extern GLuint (APIENTRY*glGetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
extern void (APIENTRY*glBlendEquationiARB)(GLuint buf, GLenum mode);
extern void (APIENTRY*glBlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void (APIENTRY*glBlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
extern void (APIENTRY*glBlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void (APIENTRY*glMultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern void (APIENTRY*glMultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern GLenum (APIENTRY*glGetGraphicsResetStatusARB)(void);
extern void (APIENTRY*glGetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
extern void (APIENTRY*glReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void (APIENTRY*glGetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
extern void (APIENTRY*glGetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void (APIENTRY*glGetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void (APIENTRY*glGetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
extern void (APIENTRY*glGetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
extern void (APIENTRY*glMinSampleShadingARB)(GLfloat value);
extern void (APIENTRY*glNamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
extern void (APIENTRY*glDeleteNamedStringARB)(GLint namelen, const GLchar *name);
extern void (APIENTRY*glCompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
extern GLboolean (APIENTRY*glIsNamedStringARB)(GLint namelen, const GLchar *name);
extern void (APIENTRY*glGetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
extern void (APIENTRY*glGetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
extern void (APIENTRY*glBufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void (APIENTRY*glNamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void (APIENTRY*glNamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void (APIENTRY*glTexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);
extern HANDLE (WINAPI*wglCreateBufferRegionARB)(HDC hDC, int iLayerPlane, UINT uType);
extern VOID (WINAPI*wglDeleteBufferRegionARB)(HANDLE hRegion);
extern BOOL (WINAPI*wglSaveBufferRegionARB)(HANDLE hRegion, int x, int y, int width, int height);
extern BOOL (WINAPI*wglRestoreBufferRegionARB)(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);
extern HGLRC (WINAPI*wglCreateContextAttribsARB)(HDC hDC, HGLRC hShareContext, const int *attribList);
extern BOOL (WINAPI*wglMakeContextCurrentARB)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
extern HDC (WINAPI*wglGetCurrentReadDCARB)(void);
extern HPBUFFERARB (WINAPI*wglCreatePbufferARB)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
extern HDC (WINAPI*wglGetPbufferDCARB)(HPBUFFERARB hPbuffer);
extern int (WINAPI*wglReleasePbufferDCARB)(HPBUFFERARB hPbuffer, HDC hDC);
extern BOOL (WINAPI*wglDestroyPbufferARB)(HPBUFFERARB hPbuffer);
extern BOOL (WINAPI*wglQueryPbufferARB)(HPBUFFERARB hPbuffer, int iAttribute, int *piValue);
extern BOOL (WINAPI*wglGetPixelFormatAttribivARB)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
extern BOOL (WINAPI*wglGetPixelFormatAttribfvARB)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
extern BOOL (WINAPI*wglChoosePixelFormatARB)(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
extern BOOL (WINAPI*wglBindTexImageARB)(HPBUFFERARB hPbuffer, int iBuffer);
extern BOOL (WINAPI*wglReleaseTexImageARB)(HPBUFFERARB hPbuffer, int iBuffer);
extern BOOL (WINAPI*wglSetPbufferAttribARB)(HPBUFFERARB hPbuffer, const int *piAttribList);
extern BOOL (WINAPI*wglSetStereoEmitterState3DL)(HDC hDC, UINT uState);
extern UINT (WINAPI*wglGetGPUIDsAMD)(UINT maxCount, UINT *ids);
extern INT (WINAPI*wglGetGPUInfoAMD)(UINT id, int property, GLenum dataType, UINT size, void *data);
extern UINT (WINAPI*wglGetContextGPUIDAMD)(HGLRC hglrc);
extern HGLRC (WINAPI*wglCreateAssociatedContextAMD)(UINT id);
extern HGLRC (WINAPI*wglCreateAssociatedContextAttribsAMD)(UINT id, HGLRC hShareContext, const int *attribList);
extern BOOL (WINAPI*wglDeleteAssociatedContextAMD)(HGLRC hglrc);
extern BOOL (WINAPI*wglMakeAssociatedContextCurrentAMD)(HGLRC hglrc);
extern HGLRC (WINAPI*wglGetCurrentAssociatedContextAMD)(void);
extern VOID (WINAPI*wglBlitContextFramebufferAMD)(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern GLboolean (WINAPI*wglCreateDisplayColorTableEXT)(GLushort id);
extern GLboolean (WINAPI*wglLoadDisplayColorTableEXT)(const GLushort *table, GLuint length);
extern GLboolean (WINAPI*wglBindDisplayColorTableEXT)(GLushort id);
extern VOID (WINAPI*wglDestroyDisplayColorTableEXT)(GLushort id);
extern BOOL (WINAPI*wglMakeContextCurrentEXT)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
extern HDC (WINAPI*wglGetCurrentReadDCEXT)(void);
extern HPBUFFEREXT (WINAPI*wglCreatePbufferEXT)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
extern HDC (WINAPI*wglGetPbufferDCEXT)(HPBUFFEREXT hPbuffer);
extern int (WINAPI*wglReleasePbufferDCEXT)(HPBUFFEREXT hPbuffer, HDC hDC);
extern BOOL (WINAPI*wglDestroyPbufferEXT)(HPBUFFEREXT hPbuffer);
extern BOOL (WINAPI*wglQueryPbufferEXT)(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);
extern BOOL (WINAPI*wglGetPixelFormatAttribivEXT)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);
extern BOOL (WINAPI*wglGetPixelFormatAttribfvEXT)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);
extern BOOL (WINAPI*wglChoosePixelFormatEXT)(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
extern BOOL (WINAPI*wglSwapIntervalEXT)(int interval);
extern int (WINAPI*wglGetSwapIntervalEXT)(void);
extern BOOL (WINAPI*wglGetDigitalVideoParametersI3D)(HDC hDC, int iAttribute, int *piValue);
extern BOOL (WINAPI*wglSetDigitalVideoParametersI3D)(HDC hDC, int iAttribute, const int *piValue);
extern BOOL (WINAPI*wglGetGammaTableParametersI3D)(HDC hDC, int iAttribute, int *piValue);
extern BOOL (WINAPI*wglSetGammaTableParametersI3D)(HDC hDC, int iAttribute, const int *piValue);
extern BOOL (WINAPI*wglGetGammaTableI3D)(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);
extern BOOL (WINAPI*wglSetGammaTableI3D)(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);
extern BOOL (WINAPI*wglEnableGenlockI3D)(HDC hDC);
extern BOOL (WINAPI*wglDisableGenlockI3D)(HDC hDC);
extern BOOL (WINAPI*wglIsEnabledGenlockI3D)(HDC hDC, BOOL *pFlag);
extern BOOL (WINAPI*wglGenlockSourceI3D)(HDC hDC, UINT uSource);
extern BOOL (WINAPI*wglGetGenlockSourceI3D)(HDC hDC, UINT *uSource);
extern BOOL (WINAPI*wglGenlockSourceEdgeI3D)(HDC hDC, UINT uEdge);
extern BOOL (WINAPI*wglGetGenlockSourceEdgeI3D)(HDC hDC, UINT *uEdge);
extern BOOL (WINAPI*wglGenlockSampleRateI3D)(HDC hDC, UINT uRate);
extern BOOL (WINAPI*wglGetGenlockSampleRateI3D)(HDC hDC, UINT *uRate);
extern BOOL (WINAPI*wglGenlockSourceDelayI3D)(HDC hDC, UINT uDelay);
extern BOOL (WINAPI*wglGetGenlockSourceDelayI3D)(HDC hDC, UINT *uDelay);
extern BOOL (WINAPI*wglQueryGenlockMaxSourceDelayI3D)(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);
extern LPVOID (WINAPI*wglCreateImageBufferI3D)(HDC hDC, DWORD dwSize, UINT uFlags);
extern BOOL (WINAPI*wglDestroyImageBufferI3D)(HDC hDC, LPVOID pAddress);
extern BOOL (WINAPI*wglAssociateImageBufferEventsI3D)(HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
extern BOOL (WINAPI*wglReleaseImageBufferEventsI3D)(HDC hDC, const LPVOID *pAddress, UINT count);
extern BOOL (WINAPI*wglEnableFrameLockI3D)(void);
extern BOOL (WINAPI*wglDisableFrameLockI3D)(void);
extern BOOL (WINAPI*wglIsEnabledFrameLockI3D)(BOOL *pFlag);
extern BOOL (WINAPI*wglQueryFrameLockMasterI3D)(BOOL *pFlag);
extern BOOL (WINAPI*wglGetFrameUsageI3D)(float *pUsage);
extern BOOL (WINAPI*wglBeginFrameTrackingI3D)(void);
extern BOOL (WINAPI*wglEndFrameTrackingI3D)(void);
extern BOOL (WINAPI*wglQueryFrameTrackingI3D)(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);
extern BOOL (WINAPI*wglDXSetResourceShareHandleNV)(void *dxObject, HANDLE shareHandle);
extern HANDLE (WINAPI*wglDXOpenDeviceNV)(void *dxDevice);
extern BOOL (WINAPI*wglDXCloseDeviceNV)(HANDLE hDevice);
extern HANDLE (WINAPI*wglDXRegisterObjectNV)(HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
extern BOOL (WINAPI*wglDXUnregisterObjectNV)(HANDLE hDevice, HANDLE hObject);
extern BOOL (WINAPI*wglDXObjectAccessNV)(HANDLE hObject, GLenum access);
extern BOOL (WINAPI*wglDXLockObjectsNV)(HANDLE hDevice, GLint count, HANDLE *hObjects);
extern BOOL (WINAPI*wglDXUnlockObjectsNV)(HANDLE hDevice, GLint count, HANDLE *hObjects);
extern BOOL (WINAPI*wglCopyImageSubDataNV)(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern BOOL (WINAPI*wglDelayBeforeSwapNV)(HDC hDC, GLfloat seconds);
extern BOOL (WINAPI*wglEnumGpusNV)(UINT iGpuIndex, HGPUNV *phGpu);
extern BOOL (WINAPI*wglEnumGpuDevicesNV)(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);
extern HDC (WINAPI*wglCreateAffinityDCNV)(const HGPUNV *phGpuList);
extern BOOL (WINAPI*wglEnumGpusFromAffinityDCNV)(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);
extern BOOL (WINAPI*wglDeleteDCNV)(HDC hdc);
extern int (WINAPI*wglEnumerateVideoDevicesNV)(HDC hDC, HVIDEOOUTPUTDEVICENV *phDeviceList);
extern BOOL (WINAPI*wglBindVideoDeviceNV)(HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);
extern BOOL (WINAPI*wglQueryCurrentContextNV)(int iAttribute, int *piValue);
extern BOOL (WINAPI*wglJoinSwapGroupNV)(HDC hDC, GLuint group);
extern BOOL (WINAPI*wglBindSwapBarrierNV)(GLuint group, GLuint barrier);
extern BOOL (WINAPI*wglQuerySwapGroupNV)(HDC hDC, GLuint *group, GLuint *barrier);
extern BOOL (WINAPI*wglQueryMaxSwapGroupsNV)(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);
extern BOOL (WINAPI*wglQueryFrameCountNV)(HDC hDC, GLuint *count);
extern BOOL (WINAPI*wglResetFrameCountNV)(HDC hDC);
extern void (WINAPI*wglFreeMemoryNV)(void *pointer);
extern BOOL (WINAPI*wglBindVideoCaptureDeviceNV)(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);
extern UINT (WINAPI*wglEnumerateVideoCaptureDevicesNV)(HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);
extern BOOL (WINAPI*wglLockVideoCaptureDeviceNV)(HDC hDc, HVIDEOINPUTDEVICENV hDevice);
extern BOOL (WINAPI*wglQueryVideoCaptureDeviceNV)(HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);
extern BOOL (WINAPI*wglReleaseVideoCaptureDeviceNV)(HDC hDc, HVIDEOINPUTDEVICENV hDevice);
extern BOOL (WINAPI*wglGetVideoDeviceNV)(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);
extern BOOL (WINAPI*wglReleaseVideoDeviceNV)(HPVIDEODEV hVideoDevice);
extern BOOL (WINAPI*wglBindVideoImageNV)(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);
extern BOOL (WINAPI*wglReleaseVideoImageNV)(HPBUFFERARB hPbuffer, int iVideoBuffer);
extern BOOL (WINAPI*wglSendPbufferToVideoNV)(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);
extern BOOL (WINAPI*wglGetVideoInfoNV)(HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);
extern BOOL (WINAPI*wglGetSyncValuesOML)(HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);
extern BOOL (WINAPI*wglGetMscRateOML)(HDC hdc, INT32 *numerator, INT32 *denominator);
extern INT64 (WINAPI*wglSwapBuffersMscOML)(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);
extern INT64 (WINAPI*wglSwapLayerBuffersMscOML)(HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);
extern BOOL (WINAPI*wglWaitForMscOML)(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);
extern BOOL (WINAPI*wglWaitForSbcOML)(HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);
void WGLGrabberInit();
